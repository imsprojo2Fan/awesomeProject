#user root
worker_processes 1;
#error_log logs/error.log debug;
events {
	worker_connections 1024;
}
rtmp {
	server {
		listen 6666;
		#chuck_size 8192;
		ping 30s;
		notify_method get;
		allow play all;
		application live {
			live on;
			record all;
			record_path /tmp/rec;
			record_unique on;
			record_interval 30s;
			#exec_static ffmpeg -re -i rtsp://admin:Abc123456@120.27.102.239:11107/h264/ch1/sub/av_stream -r 25 -s 1920x1080 -c:v copy -an -movflags frag_keyframe+empty_moov -rtsp_transport tcp -y -f mp4 rtmp://localhost:6666/hls/stream.m3u8;

		}
		application hls {
			# Turn on HLS
			hls on;
			hls_path /opt/hls/;
			hls_fragment 1;
			hls_playlist_length 60;
			deny play all;
		}
	}
}
http {
	include mime.types;
	default_type application/octet-stream;
	sendfile on;
	keepalive_timeout 65;

	server {
	    listen 80;
	    server_name video.movingdt.com;
	    #return 301 https://$server_name$request_uri;
	    rewrite ^(.*) https://$host$1 permanent;
	}

	server {
		listen 		 443 ssl;
        server_name  video.movingdt.com;
        ssl on;
        ssl_certificate /usr/local/nginx/key/video.pem;
        ssl_certificate_key /usr/local/nginx/key/video.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置
        ssl_prefer_server_ciphers on;
        #rewrite ^(.*) https://$host$1 permanent;
        #root   /opt/nginx/key;

        location / {
        	
            proxy_pass  http://localhost:8080;    
            proxy_set_header    X-Real-IP   $remote_addr;    
            client_max_body_size    100m; 

        }

        location /hls {
			types {
				application/vnd.apple.mpegurl m3u8;
				video/mp2t ts;
			}
			root /opt;
			add_header Cache-Control no-cache;
			add_header Access_Control-Allow-Origin "*";
			add_header Access_Control-Allow-Methods "GET";
		} 
		
    }
}
