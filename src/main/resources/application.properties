
spring.profiles.active=dev
#spring.profiles.active=test
#spring.profiles.active=prod

#配置监听端口
server.port=7080

#配置https
#server.ssl.key-store=keystore.p12
#server.ssl.key-store-password=123456
#server.ssl.keyStoreType=PKCS12
#server.ssl.keyAlias=tomcat
#server.port=8443


#配置多数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=1
spring.datasource.minIdle=3
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=28000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=30000
spring.datasource.validationQuery=select 1
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=true
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙,wall
spring.datasource.filters=stat,slf4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#useGlobalDataSourceStat: true
#下面这两个配置，可以在每次连接的时候判断一些连接是否有效
#spring.datasource.druid.test-on-borrow=true
#spring.datasource.druid.test-while-idle=true


#生产环境数据库
spring.datasource.url=jdbc:mysql://111.231.251.144:3306/awesome_project?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=awesomeProject2018
#开发环境数据库
spring.datasource.dev.url=jdbc:mysql://111.231.251.144:3306/awesome_project?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&autoReconnect=true
spring.datasource.dev.username=root
spring.datasource.dev.password=awesomeProject2018

#中文乱码设置
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8

#email设置
spring.mail.host=smtp.qq.com
spring.mail.username=zooori@foxmail.com
spring.mail.password=xozkiehtcaurbabf
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

#异步设置
server.tomcat.max-threads=20
server.tomcat.max-connections=10000

# Redis数据库索引（默认为0）,如果设置为1，那么存入的key-value都存放在select 1中
spring.redis.database=0 
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379 
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接超时时间（毫秒）
spring.redis.timeout=0

#打印sql
logging.level.com.inter.springboot.server.mapper=debug

#SALT
com.awesome.salt = AwesomeProject

#session失效
com.awesome.sessionMaxTime=30*60

#分页默认起始页
com.awesome.pageNow = 0
#分页每页默认显示条数
com.awesome.pageSize = 10


#配置mybatis映射文件---有个坑是IDEA工具和Eclipse不一样需把mapper文件放在resources底下
mybatis.typeAliasesPackage=com.awesome.model
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case=true


#时区设置
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8

#文件路径设置
com.file.path4windows =C:/Users/IsProjo/IdeaProjects/files/pic/
com.file.path4linux =/opt/java/files/pic/

#最大文件上传大小限制
spring.servlet.multipart.max-file-size=100Mb
spring.servlet.multipart.max-request-size=1000Mb


